/*! standardize.css v1.0.0 | MIT License | vincentleinhos.com/standardize */

/**
 * 1. Reset areas around elements.
 * 2. Make elements ready for flexible layouts. The size of `padding`/`border`
 *    does not matter, because these values will be subtracted from the width.
 * 3. Set the `font-size` to a percent of the parent element's font size. This is
 *    a method to manage the dynamic resizing of fonts.
 */
*,
*:before,
*:after {
  margin: 0; /* 1 */
  padding: 0; /* 1 */
  border: 0; /* 1 */
  box-sizing: border-box; /* 2 */
  -webkit-box-sizing: border-box; /* 2 */
  -moz-box-sizing: border-box; /* 2 */
  font-size: 100%; /* 3 */
}

/**
 * 1. Force a vertical scrollbar to prevent annoying problems.
 * 2. Improve text readability in Chrome, Safari, and Firefox 25+ on OS X.
 *    Chrome, Safari:
 *    [Source](http://maxvoltar.com/archive/-webkit-font-smoothing)
 *    Firefox:
 *    [Source](http://maximilianhoffmann.com/posts/better-font-rendering-on-osx)
 * 3. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  overflow-y: scroll; /* 1 */
  -webkit-font-smoothing: antialiased; /* 2 */
  -moz-osx-font-smoothing: grayscale; /* 2 */
  -ms-text-size-adjust: 100%; /* 3 */
  -webkit-text-size-adjust: 100%; /* 3 */
}


/* Clearfix hack
   ==========================================================================
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 *
 * [Source](http://nicolasgallagher.com/micro-clearfix-hack/)
 */
.cf:before,
.cf:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}
.cf:after {
    clear: both;
}


/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}


/* Links
   ==========================================================================
 * 1. Remove `outline` for better readability
 * 2. Remove the gray background color from active links in IE 10.
 */
a {
  outline: 0; /* 1 */
  background-color: transparent; /* 2 */
}


/* Text-level semantics
   ========================================================================== */

/**
 * Most `ul` tags are not used for enumeration but, for example, to create
 * navigations. You could rewrite it in `nav ul`.
 */
ul {
  list-style: none;
}

/**
 * 1. Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 * 2. Improve usability of cursor style
 */
abbr[title], dfn[title] {
  border-bottom: 1px dotted; /* 1 */
  cursor: help;  /* 2 */
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address style set to `italic` in all browsers.
 */
address {
  font-style: normal;
}

/**
 * Improve readability of headers in Chrome and Safari.
 * [Source](http://aestheticallyloyal.com/public/optimize-legibility/)
 */
h1, h2, h3, h4, h5, h6 {
  text-rendering: optimizeLegibility;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 * [Source](http://gist.github.com/413930)
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}


/* Embedded content
   ========================================================================== */

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Set `vertical-align` to middle (for aesthetic reasons).
 */
audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: middle; /* 2 */
}

/**
 * Flexible media
 * 1. `!important` just in case, to force correct aspect ratio.
 */
img, video {
  max-width: 100%;
  height: auto !important; /* 1 */
}
audio {
  width: 100%;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 * http://lists.w3.org/Archives/Public/public-svg-wg/2008JulSep/0339.html
 */
svg:not(:root) {
  overflow: hidden;
}


/* Grouping content
   ========================================================================== */

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * The `font-family: monospace, monospace` hack fixes the inheritance and
 * scaling of font-size for preformated text. The duplication of `monospace`
 * is intentional.
 * [Source](http://en.wikipedia.org/wiki/User:Davidgothberg/Test59)
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
}


/* Forms
   ========================================================================== */

/**
 * NOTE: Known limitation: by default, Chrome and Safari on OS X allow very
 *       limited styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 * NOTE: It is necessary despite the reset above.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Address Firefox 4+ setting `line-height` on `input` using `!important`
 *    in the UA stylesheet.
 * 2. Remove rounded corners on `input` elements in iOS.
 */
input {
  line-height: normal; /* 1 */
  -webkit-border-radius: 0; /* 2 */
}

/**
 * Improve usability and consistency of cursor style.
 * NOTE: It's recommended that you don't attempt to style these elements.
 *       Firefox's implementation doesn't respect box-sizing, padding, or width.
 */
input[type="checkbox"],
input[type="radio"] {
  cursor: pointer;
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. The search input is not fully stylable by default. In Chrome and Safari
 *    on OSX/iOS you can't control `font`, `padding`, `border`, or `background`.
 *    In Chrome and Safari on Windows you can't control `border` properly.
 *    It will apply `border-width` but will only show a border color (which
 *    cannot be controlled) for the outer 1px of that border.
 *    Applying `-webkit-appearance: textfield` addresses these issues without
 *    removing the benefits of search inputs (e.g. showing past searches).
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  box-sizing: content-box; /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}


/* Tables
   ==========================================================================
 * 1. Borders are collapsed into a single border when possible (for aesthetic
 *    reasons).
 * 2. Remove most spacing between table cells.
 */
table {
  border-collapse: collapse; /* 1 */
  border-spacing: 0; /* 2 */
}